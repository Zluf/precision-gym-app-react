[{"/Users/Zluf/Desktop/Dev Stuffs/front-end-mentor-and-other-apps/precision-gym-app-react/src/index.js":"1","/Users/Zluf/Desktop/Dev Stuffs/front-end-mentor-and-other-apps/precision-gym-app-react/src/App.js":"2","/Users/Zluf/Desktop/Dev Stuffs/front-end-mentor-and-other-apps/precision-gym-app-react/src/components/Logo/Logo.js":"3","/Users/Zluf/Desktop/Dev Stuffs/front-end-mentor-and-other-apps/precision-gym-app-react/src/test-code/InputValue.js":"4","/Users/Zluf/Desktop/Dev Stuffs/front-end-mentor-and-other-apps/precision-gym-app-react/src/context/AppProvider.js":"5","/Users/Zluf/Desktop/Dev Stuffs/front-end-mentor-and-other-apps/precision-gym-app-react/src/context/app-context.js":"6","/Users/Zluf/Desktop/Dev Stuffs/front-end-mentor-and-other-apps/precision-gym-app-react/src/components/auth/AuthDetails.js":"7","/Users/Zluf/Desktop/Dev Stuffs/front-end-mentor-and-other-apps/precision-gym-app-react/src/components/UI/UserDashboard.js":"8","/Users/Zluf/Desktop/Dev Stuffs/front-end-mentor-and-other-apps/precision-gym-app-react/src/components/auth/SignUp.js":"9","/Users/Zluf/Desktop/Dev Stuffs/front-end-mentor-and-other-apps/precision-gym-app-react/src/components/auth/SignIn.js":"10","/Users/Zluf/Desktop/Dev Stuffs/front-end-mentor-and-other-apps/precision-gym-app-react/src/components/UI/ExerciseFormModal.js":"11","/Users/Zluf/Desktop/Dev Stuffs/front-end-mentor-and-other-apps/precision-gym-app-react/src/firebase.js":"12","/Users/Zluf/Desktop/Dev Stuffs/front-end-mentor-and-other-apps/precision-gym-app-react/src/components/auth/Auth.js":"13","/Users/Zluf/Desktop/Dev Stuffs/front-end-mentor-and-other-apps/precision-gym-app-react/src/components/UI/UserDashboard/AddNewRoutine.js":"14","/Users/Zluf/Desktop/Dev Stuffs/front-end-mentor-and-other-apps/precision-gym-app-react/src/components/auth/GuestSignIn.js":"15","/Users/Zluf/Desktop/Dev Stuffs/front-end-mentor-and-other-apps/precision-gym-app-react/src/components/UI/UserDashboard/Routine.js":"16","/Users/Zluf/Desktop/Dev Stuffs/front-end-mentor-and-other-apps/precision-gym-app-react/src/components/UI/UserDashboard/Exercise.js":"17","/Users/Zluf/Desktop/Dev Stuffs/front-end-mentor-and-other-apps/precision-gym-app-react/src/components/UI/UserDashboard/Exercise/RepGauge.js":"18","/Users/Zluf/Desktop/Dev Stuffs/front-end-mentor-and-other-apps/precision-gym-app-react/src/components/UI/UserDashboard/Exercise/ExerciseStats.js":"19"},{"size":173,"mtime":1694781712000,"results":"20","hashOfConfig":"21"},{"size":715,"mtime":1695150434000,"results":"22","hashOfConfig":"21"},{"size":171,"mtime":1681916004000,"results":"23","hashOfConfig":"21"},{"size":707,"mtime":1678899535000,"results":"24","hashOfConfig":"25"},{"size":6290,"mtime":1695150435000,"results":"26","hashOfConfig":"21"},{"size":112,"mtime":1693826776000,"results":"27","hashOfConfig":"21"},{"size":1297,"mtime":1695150435000,"results":"28","hashOfConfig":"21"},{"size":1371,"mtime":1694779038000,"results":"29","hashOfConfig":"21"},{"size":1603,"mtime":1694779038000,"results":"30","hashOfConfig":"21"},{"size":1495,"mtime":1695150435000,"results":"31","hashOfConfig":"21"},{"size":2926,"mtime":1694779038000,"results":"32","hashOfConfig":"21"},{"size":850,"mtime":1695150435000,"results":"33","hashOfConfig":"21"},{"size":305,"mtime":1694779038000,"results":"34","hashOfConfig":"21"},{"size":1552,"mtime":1694779038000,"results":"35","hashOfConfig":"21"},{"size":916,"mtime":1695150435000,"results":"36","hashOfConfig":"21"},{"size":5079,"mtime":1694779038000,"results":"37","hashOfConfig":"21"},{"size":1732,"mtime":1695150434000,"results":"38","hashOfConfig":"21"},{"size":1693,"mtime":1695150435000,"results":"39","hashOfConfig":"21"},{"size":4714,"mtime":1695150435000,"results":"40","hashOfConfig":"21"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"yuh7zx",{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"15ufotc",{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"43"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"43"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"43"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/Zluf/Desktop/Dev Stuffs/front-end-mentor-and-other-apps/precision-gym-app-react/src/index.js",[],["84","85"],"/Users/Zluf/Desktop/Dev Stuffs/front-end-mentor-and-other-apps/precision-gym-app-react/src/App.js",[],"/Users/Zluf/Desktop/Dev Stuffs/front-end-mentor-and-other-apps/precision-gym-app-react/src/components/Logo/Logo.js",[],"/Users/Zluf/Desktop/Dev Stuffs/front-end-mentor-and-other-apps/precision-gym-app-react/src/test-code/InputValue.js",[],["86","87"],"/Users/Zluf/Desktop/Dev Stuffs/front-end-mentor-and-other-apps/precision-gym-app-react/src/context/AppProvider.js",["88","89"],"/Users/Zluf/Desktop/Dev Stuffs/front-end-mentor-and-other-apps/precision-gym-app-react/src/context/app-context.js",[],"/Users/Zluf/Desktop/Dev Stuffs/front-end-mentor-and-other-apps/precision-gym-app-react/src/components/auth/AuthDetails.js",["90","91","92"],"/Users/Zluf/Desktop/Dev Stuffs/front-end-mentor-and-other-apps/precision-gym-app-react/src/components/UI/UserDashboard.js",["93","94","95"],"import \"./UserDashboard.css\";\nimport React, { useRef, useState } from \"react\";\nimport Routine from \"./UserDashboard/Routine\";\nimport ExerciseFormModal from \"./ExerciseFormModal\";\nimport AppContext from \"../../context/app-context\";\nimport AddNewRoutine from \"./UserDashboard/AddNewRoutine\";\n\nexport default function UserDashboard() {\n  const context = React.useContext(AppContext);\n\n  React.useEffect(() => {\n    // executes upon mount, gets stored in memory, therefore does not execute on further re-renders\n    context.fetchExerciseDatabase();\n  }, [context.fetchExerciseDatabase]);\n\n  return (\n    <div className=\"user-dashboard\">\n      {context.routineList\n        .sort((a, b) => a.routineId - b.routineId)\n        .map((routine, i) => {\n          const routineClassName = routine.routineName\n            .toLowerCase()\n            .split(\" \")\n            .join(\"-\");\n\n          return (\n            <div className=\"routine-container\" key={`rc${i}`}>\n              <Routine\n                key={i}\n                className={`routine ${routineClassName}`}\n                id={routineClassName}\n                routineName={routine.routineName}\n                routine={routine}\n              />\n\n              <AddNewRoutine routineIndex={i} />\n            </div>\n          );\n        })}\n\n      {context.modalWindowIsOpen && <ExerciseFormModal />}\n    </div>\n  );\n}\n","/Users/Zluf/Desktop/Dev Stuffs/front-end-mentor-and-other-apps/precision-gym-app-react/src/components/auth/SignUp.js",[],"/Users/Zluf/Desktop/Dev Stuffs/front-end-mentor-and-other-apps/precision-gym-app-react/src/components/auth/SignIn.js",["96"],"/Users/Zluf/Desktop/Dev Stuffs/front-end-mentor-and-other-apps/precision-gym-app-react/src/components/UI/ExerciseFormModal.js",["97"],"import React, { useEffect, useRef } from \"react\";\nimport reactDom from \"react-dom\";\nimport AppContext from \"../../context/app-context\";\nimport \"./ExerciseFormModal.css\";\n\nexport default function ExerciseForm() {\n  const context = React.useContext(AppContext);\n  const nameInput = useRef();\n  const weightInput = useRef();\n  const setsInput = useRef();\n  const repsInput = useRef();\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const exName = nameInput.current.value;\n    const exWeight = weightInput.current.value;\n    const exSets = setsInput.current.value;\n    const exReps = repsInput.current.value;\n\n    const newExInput = {\n      id: context.currentRoutine.exercises.length + 1,\n      name: exName,\n      sets: Array(+exSets).fill({\n        weight: exWeight,\n        reps: Array(+exReps).fill(0),\n      }),\n    };\n\n    context.updateExerciseList2(\n      context.currentRoutine.routineName,\n      newExInput,\n      context.currentRoutine.routineDate\n    );\n\n    context.toggleModal();\n  };\n\n  const formRef = useRef(null);\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (formRef.current && !formRef.current.contains(event.target)) {\n        context.toggleModal();\n      }\n    };\n    window.addEventListener(\"click\", handleClickOutside);\n    return () => {\n      window.removeEventListener(\"click\", handleClickOutside);\n    };\n  }, []);\n\n  return (\n    <>\n      {reactDom.createPortal(\n        <div className=\"exercise-form\" ref={formRef}>\n          <div className=\"close\" onClick={context.toggleModal}>\n            ❌\n          </div>\n          <form onSubmit={submitHandler}>\n            <label htmlFor=\"name\">Exercise Name</label>\n            <input\n              name=\"name\"\n              type=\"text\"\n              ref={nameInput}\n              defaultValue={\"\"}\n              required\n            />\n\n            <label htmlFor=\"weight\">Weight (kg)</label>\n            <input\n              name=\"weight\"\n              type=\"number\"\n              step=\"any\"\n              min=\"0\"\n              ref={weightInput}\n              defaultValue={\"\"}\n              required\n            />\n\n            <label htmlFor=\"sets\">Sets</label>\n            <input\n              name=\"sets\"\n              type=\"number\"\n              ref={setsInput}\n              min=\"0\"\n              defaultValue={\"\"}\n              required\n            />\n\n            <label htmlFor=\"reps\">Reps per set</label>\n            <input\n              name=\"reps\"\n              type=\"number\"\n              min=\"0\"\n              ref={repsInput}\n              defaultValue={\"\"}\n              required\n            />\n\n            <button className=\"button\" type=\"submit\">\n              👊 Add Exercise\n            </button>\n          </form>\n        </div>,\n        document.getElementById(\n          context.currentRoutine.routineName.toLowerCase().split(\" \").join(\"-\")\n        )\n      )}\n    </>\n  );\n}\n","/Users/Zluf/Desktop/Dev Stuffs/front-end-mentor-and-other-apps/precision-gym-app-react/src/firebase.js",[],"/Users/Zluf/Desktop/Dev Stuffs/front-end-mentor-and-other-apps/precision-gym-app-react/src/components/auth/Auth.js",[],"/Users/Zluf/Desktop/Dev Stuffs/front-end-mentor-and-other-apps/precision-gym-app-react/src/components/UI/UserDashboard/AddNewRoutine.js",[],"/Users/Zluf/Desktop/Dev Stuffs/front-end-mentor-and-other-apps/precision-gym-app-react/src/components/auth/GuestSignIn.js",["98"],"/Users/Zluf/Desktop/Dev Stuffs/front-end-mentor-and-other-apps/precision-gym-app-react/src/components/UI/UserDashboard/Routine.js",["99","100"],"import { useState, useEffect, useContext } from \"react\";\nimport \"./Routine.css\";\nimport Exercise from \"./Exercise\";\nimport AppContext from \"../../../context/app-context\";\nimport slideChange from \"../../../assets/icon-slide-change.svg\";\n\nexport default function Routine(props) {\n  const date = new Date();\n  const day = date.getDate() < 10 ? `0${date.getDate()}` : date.getDate();\n  const month =\n    date.getMonth() < 10 ? `0${date.getMonth() + 1}` : `${date.getMonth() + 1}`;\n  const todaysDate = `${date.getFullYear()}-${month}-${day}`;\n\n  const routineDates = Object.keys(props.routine.logbook);\n  const [currentSlide, setCurrentSlide] = useState(0);\n  const [sessionIsToday, setSessionIsToday] = useState(false);\n  const [displayedDate, setDisplayedDate] = useState(\n    routineDates[routineDates.length - 1]\n  );\n  const todayIsTheNewDate = routineDates.some((date) => date === todaysDate);\n  const context = useContext(AppContext);\n\n  const onBlurHandler = (event, exercise) => {\n    let updatedEx = exercise;\n    const inputKeyName = Object.keys(updatedEx).find(\n      (key) => updatedEx[key] === updatedEx[event.target.name]\n    );\n    updatedEx[inputKeyName] = event.target.value;\n    context.updateExerciseList2(props.routineName, updatedEx, displayedDate);\n  };\n\n  const onSlideChange = (event, direction) => {\n    if (direction === \"prev\")\n      setCurrentSlide((prevCurrentSlide) => prevCurrentSlide - 1);\n    if (direction === \"next\")\n      setCurrentSlide((prevCurrentSlide) => prevCurrentSlide + 1);\n  };\n\n  const addNewDateHandler = () => {\n    context.addNewDate(props.routineName, todaysDate);\n    setSessionIsToday(true);\n    setCurrentSlide(0);\n  };\n\n  const setCurrentDateHandler = (event) => {\n    setDisplayedDate(event.target.value);\n  };\n\n  useEffect(() => {\n    if (displayedDate === todaysDate) setSessionIsToday(true);\n    if (displayedDate !== todaysDate) setSessionIsToday(false);\n  }, []);\n\n  useEffect(() => {\n    if (routineDates.some((date) => date === todaysDate)) {\n      setSessionIsToday(true);\n      setDisplayedDate(routineDates[routineDates.length - 1]);\n    }\n  }, [routineDates.length]);\n\n  return (\n    <section\n      className={props.className}\n      id={props.id}\n      data-routine-name={props.routineName}\n      data-date={displayedDate}\n    >\n      <button\n        className=\"slide-btn slide-left\"\n        style={{\n          visibility: currentSlide === 0 && \"hidden\",\n        }}\n        onClick={(event) => onSlideChange(event, \"prev\")}\n      >\n        <img src={slideChange} alt=\"slide-left arrow\" />\n      </button>\n\n      <button\n        className=\"slide-btn slide-right\"\n        style={{\n          visibility:\n            displayedDate &&\n            currentSlide === props.routine.logbook[displayedDate].length - 1 &&\n            \"hidden\",\n        }}\n        onClick={(event) => onSlideChange(event, \"next\")}\n      >\n        <img src={slideChange} alt=\"slide-right arrow\" />\n      </button>\n\n      <h2>{props.routineName}</h2>\n\n      <select\n        name=\"routine-dates\"\n        value={displayedDate}\n        readOnly={displayedDate}\n        onChange={setCurrentDateHandler}\n      >\n        <option>Select a date</option>\n        {routineDates\n          .map((date, i) => (\n            <option\n              // onChange={() => {\n              //   console.log(date);\n              //   setCurrentDateHandler(date, i);\n              // }}\n              key={date}\n              value={date}\n            >\n              {date}\n            </option>\n          ))\n          .sort((a, b) => a - b)}\n      </select>\n\n      {!todayIsTheNewDate && (\n        <button onClick={addNewDateHandler}>\n          + I'm doing a new session today!\n        </button>\n      )}\n\n      {props.routine.logbook[displayedDate] && (\n        <div\n          data-date={displayedDate}\n          className=\"exercises-container\"\n          style={{\n            transform: `translateX(-${300 * currentSlide}px)`,\n            width: `${props.routine.logbook[displayedDate].length * 300}px`,\n          }}\n        >\n          {props.routine.logbook[displayedDate].map((exercise, i) => {\n            return (\n              <Exercise\n                key={`${exercise.name}-${i + 1}`}\n                routineName={props.routineName}\n                routineIndex={props.routineIndex}\n                routineDate={displayedDate}\n                ex={exercise}\n                onEditExercise={() => {\n                  context.toggleModal(exercise);\n                }}\n                onBlur={(event) => onBlurHandler(event, exercise)}\n                onDeleteExercise={context.deleteExercise}\n              />\n            );\n          })}\n        </div>\n      )}\n\n      {sessionIsToday && (\n        <button\n          className=\"add-ex-btn\"\n          onClick={() => {\n            context.toggleModal({\n              routineName: props.routineName,\n              routineDate: displayedDate,\n              exercises: props.routine.logbook[displayedDate],\n            });\n          }}\n        >\n          + Add Exercise\n        </button>\n      )}\n    </section>\n  );\n}\n","/Users/Zluf/Desktop/Dev Stuffs/front-end-mentor-and-other-apps/precision-gym-app-react/src/components/UI/UserDashboard/Exercise.js",["101","102"],"/Users/Zluf/Desktop/Dev Stuffs/front-end-mentor-and-other-apps/precision-gym-app-react/src/components/UI/UserDashboard/Exercise/RepGauge.js",[],"/Users/Zluf/Desktop/Dev Stuffs/front-end-mentor-and-other-apps/precision-gym-app-react/src/components/UI/UserDashboard/Exercise/ExerciseStats.js",[],{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"103","replacedBy":"107"},{"ruleId":"105","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":1,"column":28,"nodeType":"111","messageId":"112","endLine":1,"endColumn":35},{"ruleId":"113","severity":1,"message":"114","line":113,"column":28,"nodeType":"115","messageId":"116","endLine":113,"endColumn":30},{"ruleId":"109","severity":1,"message":"117","line":1,"column":17,"nodeType":"111","messageId":"112","endLine":1,"endColumn":25},{"ruleId":"109","severity":1,"message":"118","line":2,"column":39,"nodeType":"111","messageId":"112","endLine":2,"endColumn":52},{"ruleId":"119","severity":1,"message":"120","line":38,"column":6,"nodeType":"121","endLine":38,"endColumn":8,"suggestions":"122"},{"ruleId":"109","severity":1,"message":"123","line":2,"column":17,"nodeType":"111","messageId":"112","endLine":2,"endColumn":23},{"ruleId":"109","severity":1,"message":"117","line":2,"column":25,"nodeType":"111","messageId":"112","endLine":2,"endColumn":33},{"ruleId":"119","severity":1,"message":"124","line":14,"column":6,"nodeType":"121","endLine":14,"endColumn":37,"suggestions":"125"},{"ruleId":"109","severity":1,"message":"118","line":2,"column":38,"nodeType":"111","messageId":"112","endLine":2,"endColumn":51},{"ruleId":"119","severity":1,"message":"120","line":50,"column":6,"nodeType":"121","endLine":50,"endColumn":8,"suggestions":"126"},{"ruleId":"109","severity":1,"message":"127","line":2,"column":10,"nodeType":"111","messageId":"112","endLine":2,"endColumn":27},{"ruleId":"119","severity":1,"message":"128","line":52,"column":6,"nodeType":"121","endLine":52,"endColumn":8,"suggestions":"129"},{"ruleId":"119","severity":1,"message":"130","line":59,"column":6,"nodeType":"121","endLine":59,"endColumn":27,"suggestions":"131"},{"ruleId":"109","severity":1,"message":"132","line":4,"column":8,"nodeType":"111","messageId":"112","endLine":4,"endColumn":16},{"ruleId":"109","severity":1,"message":"133","line":5,"column":8,"nodeType":"111","messageId":"112","endLine":5,"endColumn":13},"no-native-reassign",["134"],"no-negated-in-lhs",["135"],["134"],["135"],"no-unused-vars","'useMemo' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useState' is defined but never used.","'updateProfile' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'context'. Either include it or remove the dependency array.","ArrayExpression",["136"],"'useRef' is defined but never used.","React Hook React.useEffect has a missing dependency: 'context'. Either include it or remove the dependency array.",["137"],["138"],"'signInAnonymously' is defined but never used.","React Hook useEffect has missing dependencies: 'displayedDate' and 'todaysDate'. Either include them or remove the dependency array.",["139"],"React Hook useEffect has missing dependencies: 'routineDates' and 'todaysDate'. Either include them or remove the dependency array.",["140"],"'RepGauge' is defined but never used.","'angle' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"141","fix":"142"},{"desc":"143","fix":"144"},{"desc":"141","fix":"145"},{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},"Update the dependencies array to be: [context]",{"range":"150","text":"151"},"Update the dependencies array to be: [context, context.fetchExerciseDatabase]",{"range":"152","text":"153"},{"range":"154","text":"151"},"Update the dependencies array to be: [displayedDate, todaysDate]",{"range":"155","text":"156"},"Update the dependencies array to be: [routineDates, routineDates.length, todaysDate]",{"range":"157","text":"158"},[1052,1054],"[context]",[550,581],"[context, context.fetchExerciseDatabase]",[1387,1389],[1917,1919],"[displayedDate, todaysDate]",[2108,2129],"[routineDates, routineDates.length, todaysDate]"]