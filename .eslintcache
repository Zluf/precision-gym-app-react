[{"/Users/Zluf/Desktop/Dev Stuffs/front-end-mentor-and-other-apps/precision-gym-app-react/src/index.js":"1","/Users/Zluf/Desktop/Dev Stuffs/front-end-mentor-and-other-apps/precision-gym-app-react/src/App.js":"2","/Users/Zluf/Desktop/Dev Stuffs/front-end-mentor-and-other-apps/precision-gym-app-react/src/components/Logo/Logo.js":"3","/Users/Zluf/Desktop/Dev Stuffs/front-end-mentor-and-other-apps/precision-gym-app-react/src/test-code/InputValue.js":"4","/Users/Zluf/Desktop/Dev Stuffs/front-end-mentor-and-other-apps/precision-gym-app-react/src/context/AppProvider.js":"5","/Users/Zluf/Desktop/Dev Stuffs/front-end-mentor-and-other-apps/precision-gym-app-react/src/context/app-context.js":"6","/Users/Zluf/Desktop/Dev Stuffs/front-end-mentor-and-other-apps/precision-gym-app-react/src/components/auth/AuthDetails.js":"7","/Users/Zluf/Desktop/Dev Stuffs/front-end-mentor-and-other-apps/precision-gym-app-react/src/components/UI/UserDashboard.js":"8","/Users/Zluf/Desktop/Dev Stuffs/front-end-mentor-and-other-apps/precision-gym-app-react/src/components/auth/SignUp.js":"9","/Users/Zluf/Desktop/Dev Stuffs/front-end-mentor-and-other-apps/precision-gym-app-react/src/components/auth/SignIn.js":"10","/Users/Zluf/Desktop/Dev Stuffs/front-end-mentor-and-other-apps/precision-gym-app-react/src/components/UI/ExerciseFormModal.js":"11","/Users/Zluf/Desktop/Dev Stuffs/front-end-mentor-and-other-apps/precision-gym-app-react/src/firebase.js":"12","/Users/Zluf/Desktop/Dev Stuffs/front-end-mentor-and-other-apps/precision-gym-app-react/src/components/auth/Auth.js":"13","/Users/Zluf/Desktop/Dev Stuffs/front-end-mentor-and-other-apps/precision-gym-app-react/src/components/UI/UserDashboard/AddNewRoutine.js":"14","/Users/Zluf/Desktop/Dev Stuffs/front-end-mentor-and-other-apps/precision-gym-app-react/src/components/auth/GuestSignIn.js":"15","/Users/Zluf/Desktop/Dev Stuffs/front-end-mentor-and-other-apps/precision-gym-app-react/src/components/UI/UserDashboard/Routine.js":"16","/Users/Zluf/Desktop/Dev Stuffs/front-end-mentor-and-other-apps/precision-gym-app-react/src/components/UI/UserDashboard/Exercise.js":"17","/Users/Zluf/Desktop/Dev Stuffs/front-end-mentor-and-other-apps/precision-gym-app-react/src/components/UI/UserDashboard/Exercise/RepGauge.js":"18","/Users/Zluf/Desktop/Dev Stuffs/front-end-mentor-and-other-apps/precision-gym-app-react/src/components/UI/UserDashboard/Exercise/ExerciseStats.js":"19"},{"size":173,"mtime":1694781712000,"results":"20","hashOfConfig":"21"},{"size":796,"mtime":1695150446000,"results":"22","hashOfConfig":"21"},{"size":171,"mtime":1681916004000,"results":"23","hashOfConfig":"21"},{"size":707,"mtime":1678899535000,"results":"24","hashOfConfig":"25"},{"size":6282,"mtime":1695150446000,"results":"26","hashOfConfig":"21"},{"size":112,"mtime":1693826776000,"results":"27","hashOfConfig":"21"},{"size":1340,"mtime":1695150446000,"results":"28","hashOfConfig":"21"},{"size":1371,"mtime":1694779038000,"results":"29","hashOfConfig":"21"},{"size":1603,"mtime":1694779038000,"results":"30","hashOfConfig":"21"},{"size":1480,"mtime":1695150446000,"results":"31","hashOfConfig":"21"},{"size":2926,"mtime":1694779038000,"results":"32","hashOfConfig":"21"},{"size":794,"mtime":1695151612000,"results":"33","hashOfConfig":"21"},{"size":305,"mtime":1694779038000,"results":"34","hashOfConfig":"21"},{"size":1552,"mtime":1694779038000,"results":"35","hashOfConfig":"21"},{"size":723,"mtime":1695150446000,"results":"36","hashOfConfig":"21"},{"size":5079,"mtime":1694779038000,"results":"37","hashOfConfig":"21"},{"size":1638,"mtime":1695150446000,"results":"38","hashOfConfig":"21"},{"size":1691,"mtime":1695150446000,"results":"39","hashOfConfig":"21"},{"size":4941,"mtime":1695150446000,"results":"40","hashOfConfig":"21"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"yuh7zx",{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"43"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},"15ufotc",{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"43"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"43"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"43"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"43"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"43"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"43"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"43"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"/Users/Zluf/Desktop/Dev Stuffs/front-end-mentor-and-other-apps/precision-gym-app-react/src/index.js",[],["89","90"],"/Users/Zluf/Desktop/Dev Stuffs/front-end-mentor-and-other-apps/precision-gym-app-react/src/App.js",["91","92","93","94","95","96"],"import React from \"react\";\nimport \"./App.css\";\nimport Logo from \"./components/Logo/Logo\";\nimport AppContext from \"./context/app-context\";\nimport Auth from \"./components/auth/Auth\";\nimport AuthDetails from \"./components/auth/AuthDetails\";\nimport UserDashboard from \"./components/UI/UserDashboard\";\nimport AddNewRoutine from \"./components/UI/UserDashboard/AddNewRoutine\";\nconsole.log(process.env.REACT_APP_TEST);\nfunction App() {\n  const context = React.useContext(AppContext);\n  return (\n    <div className=\"app\">\n      {/* <Logo />\n      <AuthDetails />\n      {!context.authUser && <Auth />}\n      {context.authUser && <UserDashboard />}\n      {context.authUser && context.routineList.length <= 0 && <AddNewRoutine />} */}\n      {/* <DragDropTest /> */}\n    </div>\n  );\n}\n//\n\nexport default App;\n","/Users/Zluf/Desktop/Dev Stuffs/front-end-mentor-and-other-apps/precision-gym-app-react/src/components/Logo/Logo.js",[],"/Users/Zluf/Desktop/Dev Stuffs/front-end-mentor-and-other-apps/precision-gym-app-react/src/test-code/InputValue.js",[],["97","98"],"/Users/Zluf/Desktop/Dev Stuffs/front-end-mentor-and-other-apps/precision-gym-app-react/src/context/AppProvider.js",[],"/Users/Zluf/Desktop/Dev Stuffs/front-end-mentor-and-other-apps/precision-gym-app-react/src/context/app-context.js",[],"/Users/Zluf/Desktop/Dev Stuffs/front-end-mentor-and-other-apps/precision-gym-app-react/src/components/auth/AuthDetails.js",["99","100","101"],"import React, { useState, useEffect } from \"react\";\nimport { onAuthStateChanged, signOut, updateProfile } from \"firebase/auth\";\nimport { auth } from \"../../firebase\";\nimport AppContext from \"../../context/app-context\";\n\nexport default function AuthDetails() {\n  const context = React.useContext(AppContext);\n\n  const userSignOut = () => {\n    signOut(auth)\n      .then(() => {\n        fetch(\n          `https://precision-gym-default-rtdb.firebaseio.com/users/guest.json`,\n          {\n            method: \"DELETE\",\n          }\n        );\n\n        console.log(\"Sign Out Successful 🔒\");\n      })\n      .catch((error) => console.log(error));\n  };\n\n  // Signs out guest on the next page load\n  useEffect(() => {\n    window.addEventListener(\"beforeunload\", () => {\n      if (auth.currentUser && auth.currentUser.displayName === \"guest\") {\n        userSignOut(auth);\n      }\n    });\n\n    onAuthStateChanged(auth, (user) => {\n      if (user) {\n        context.setUser(\n          user.displayName ? user.displayName : user.email.split(\"@\")[0]\n        );\n      } else context.setUser(null);\n    });\n  }, []);\n\n  return (\n    <div className=\"auth-details\">\n      {context.authUser && (\n        <>\n          <p>{`Signed in as ${context.authUser}`}</p>\n          <button onClick={userSignOut}>Sign Out</button>\n        </>\n      )}\n    </div>\n  );\n}\n","/Users/Zluf/Desktop/Dev Stuffs/front-end-mentor-and-other-apps/precision-gym-app-react/src/components/UI/UserDashboard.js",["102","103","104"],"import \"./UserDashboard.css\";\nimport React, { useRef, useState } from \"react\";\nimport Routine from \"./UserDashboard/Routine\";\nimport ExerciseFormModal from \"./ExerciseFormModal\";\nimport AppContext from \"../../context/app-context\";\nimport AddNewRoutine from \"./UserDashboard/AddNewRoutine\";\n\nexport default function UserDashboard() {\n  const context = React.useContext(AppContext);\n\n  React.useEffect(() => {\n    // executes upon mount, gets stored in memory, therefore does not execute on further re-renders\n    context.fetchExerciseDatabase();\n  }, [context.fetchExerciseDatabase]);\n\n  return (\n    <div className=\"user-dashboard\">\n      {context.routineList\n        .sort((a, b) => a.routineId - b.routineId)\n        .map((routine, i) => {\n          const routineClassName = routine.routineName\n            .toLowerCase()\n            .split(\" \")\n            .join(\"-\");\n\n          return (\n            <div className=\"routine-container\" key={`rc${i}`}>\n              <Routine\n                key={i}\n                className={`routine ${routineClassName}`}\n                id={routineClassName}\n                routineName={routine.routineName}\n                routine={routine}\n              />\n\n              <AddNewRoutine routineIndex={i} />\n            </div>\n          );\n        })}\n\n      {context.modalWindowIsOpen && <ExerciseFormModal />}\n    </div>\n  );\n}\n","/Users/Zluf/Desktop/Dev Stuffs/front-end-mentor-and-other-apps/precision-gym-app-react/src/components/auth/SignUp.js",[],"/Users/Zluf/Desktop/Dev Stuffs/front-end-mentor-and-other-apps/precision-gym-app-react/src/components/auth/SignIn.js",["105"],"import React, { useState } from \"react\";\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\nimport { auth } from \"../../firebase\";\nimport AppContext from \"../../context/app-context\";\nimport \"./Auth.css\";\n\nexport default function SignIn() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(false);\n  const context = React.useContext(AppContext);\n\n  const signIn = (event) => {\n    event.preventDefault();\n    signInWithEmailAndPassword(auth, email, password)\n      .then((userCredential) => {\n        context.setUser(userCredential.user.displayName);\n      })\n      .catch((error) => {\n        setError(true);\n        console.log(\"💥\", error);\n      });\n  };\n\n  return (\n    <div className=\"signin-login-container\">\n      <form onSubmit={signIn}>\n        <h2>Log In to Your Account</h2>\n        <input\n          type=\"email\"\n          placeholder=\"Enter your email\"\n          value={email}\n          onFocus={() => setError(false)}\n          onChange={(event) => setEmail(event.target.value)}\n        ></input>\n        <input\n          type=\"password\"\n          placeholder=\"Enter your password\"\n          value={password}\n          onFocus={() => setError(false)}\n          onChange={(event) => setPassword(event.target.value)}\n        ></input>\n        <button type=\"submit\">Log In</button>\n        {error && <p>Invalid credentials. Could not log in...</p>}\n      </form>\n    </div>\n  );\n}\n","/Users/Zluf/Desktop/Dev Stuffs/front-end-mentor-and-other-apps/precision-gym-app-react/src/components/UI/ExerciseFormModal.js",["106"],"import React, { useEffect, useRef } from \"react\";\nimport reactDom from \"react-dom\";\nimport AppContext from \"../../context/app-context\";\nimport \"./ExerciseFormModal.css\";\n\nexport default function ExerciseForm() {\n  const context = React.useContext(AppContext);\n  const nameInput = useRef();\n  const weightInput = useRef();\n  const setsInput = useRef();\n  const repsInput = useRef();\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const exName = nameInput.current.value;\n    const exWeight = weightInput.current.value;\n    const exSets = setsInput.current.value;\n    const exReps = repsInput.current.value;\n\n    const newExInput = {\n      id: context.currentRoutine.exercises.length + 1,\n      name: exName,\n      sets: Array(+exSets).fill({\n        weight: exWeight,\n        reps: Array(+exReps).fill(0),\n      }),\n    };\n\n    context.updateExerciseList2(\n      context.currentRoutine.routineName,\n      newExInput,\n      context.currentRoutine.routineDate\n    );\n\n    context.toggleModal();\n  };\n\n  const formRef = useRef(null);\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (formRef.current && !formRef.current.contains(event.target)) {\n        context.toggleModal();\n      }\n    };\n    window.addEventListener(\"click\", handleClickOutside);\n    return () => {\n      window.removeEventListener(\"click\", handleClickOutside);\n    };\n  }, []);\n\n  return (\n    <>\n      {reactDom.createPortal(\n        <div className=\"exercise-form\" ref={formRef}>\n          <div className=\"close\" onClick={context.toggleModal}>\n            ❌\n          </div>\n          <form onSubmit={submitHandler}>\n            <label htmlFor=\"name\">Exercise Name</label>\n            <input\n              name=\"name\"\n              type=\"text\"\n              ref={nameInput}\n              defaultValue={\"\"}\n              required\n            />\n\n            <label htmlFor=\"weight\">Weight (kg)</label>\n            <input\n              name=\"weight\"\n              type=\"number\"\n              step=\"any\"\n              min=\"0\"\n              ref={weightInput}\n              defaultValue={\"\"}\n              required\n            />\n\n            <label htmlFor=\"sets\">Sets</label>\n            <input\n              name=\"sets\"\n              type=\"number\"\n              ref={setsInput}\n              min=\"0\"\n              defaultValue={\"\"}\n              required\n            />\n\n            <label htmlFor=\"reps\">Reps per set</label>\n            <input\n              name=\"reps\"\n              type=\"number\"\n              min=\"0\"\n              ref={repsInput}\n              defaultValue={\"\"}\n              required\n            />\n\n            <button className=\"button\" type=\"submit\">\n              👊 Add Exercise\n            </button>\n          </form>\n        </div>,\n        document.getElementById(\n          context.currentRoutine.routineName.toLowerCase().split(\" \").join(\"-\")\n        )\n      )}\n    </>\n  );\n}\n","/Users/Zluf/Desktop/Dev Stuffs/front-end-mentor-and-other-apps/precision-gym-app-react/src/firebase.js",[],"/Users/Zluf/Desktop/Dev Stuffs/front-end-mentor-and-other-apps/precision-gym-app-react/src/components/auth/Auth.js",[],"/Users/Zluf/Desktop/Dev Stuffs/front-end-mentor-and-other-apps/precision-gym-app-react/src/components/UI/UserDashboard/AddNewRoutine.js",[],"/Users/Zluf/Desktop/Dev Stuffs/front-end-mentor-and-other-apps/precision-gym-app-react/src/components/auth/GuestSignIn.js",["107"],"import React from \"react\";\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\nimport { auth } from \"../../firebase\";\nimport AppContext from \"../../context/app-context\";\nimport \"./Auth.css\";\n\nexport default function SignIn() {\n  const context = React.useContext(AppContext);\n\n  const signInAsGuest = (event) => {\n    event.preventDefault();\n\n    signInWithEmailAndPassword(auth, \"guest@no-email.com\", \"no-password\")\n      .then((userCredential) => {\n        context.setUser(\"guest\");\n      })\n      .catch((error) => console.log(error));\n  };\n\n  return (\n    <div className=\"signin-login-container\">\n      <h2 className=\"guest-login\" onClick={signInAsGuest}>\n        Log In as a Guest\n      </h2>\n    </div>\n  );\n}\n","/Users/Zluf/Desktop/Dev Stuffs/front-end-mentor-and-other-apps/precision-gym-app-react/src/components/UI/UserDashboard/Routine.js",["108","109"],"import { useState, useEffect, useContext } from \"react\";\nimport \"./Routine.css\";\nimport Exercise from \"./Exercise\";\nimport AppContext from \"../../../context/app-context\";\nimport slideChange from \"../../../assets/icon-slide-change.svg\";\n\nexport default function Routine(props) {\n  const date = new Date();\n  const day = date.getDate() < 10 ? `0${date.getDate()}` : date.getDate();\n  const month =\n    date.getMonth() < 10 ? `0${date.getMonth() + 1}` : `${date.getMonth() + 1}`;\n  const todaysDate = `${date.getFullYear()}-${month}-${day}`;\n\n  const routineDates = Object.keys(props.routine.logbook);\n  const [currentSlide, setCurrentSlide] = useState(0);\n  const [sessionIsToday, setSessionIsToday] = useState(false);\n  const [displayedDate, setDisplayedDate] = useState(\n    routineDates[routineDates.length - 1]\n  );\n  const todayIsTheNewDate = routineDates.some((date) => date === todaysDate);\n  const context = useContext(AppContext);\n\n  const onBlurHandler = (event, exercise) => {\n    let updatedEx = exercise;\n    const inputKeyName = Object.keys(updatedEx).find(\n      (key) => updatedEx[key] === updatedEx[event.target.name]\n    );\n    updatedEx[inputKeyName] = event.target.value;\n    context.updateExerciseList2(props.routineName, updatedEx, displayedDate);\n  };\n\n  const onSlideChange = (event, direction) => {\n    if (direction === \"prev\")\n      setCurrentSlide((prevCurrentSlide) => prevCurrentSlide - 1);\n    if (direction === \"next\")\n      setCurrentSlide((prevCurrentSlide) => prevCurrentSlide + 1);\n  };\n\n  const addNewDateHandler = () => {\n    context.addNewDate(props.routineName, todaysDate);\n    setSessionIsToday(true);\n    setCurrentSlide(0);\n  };\n\n  const setCurrentDateHandler = (event) => {\n    setDisplayedDate(event.target.value);\n  };\n\n  useEffect(() => {\n    if (displayedDate === todaysDate) setSessionIsToday(true);\n    if (displayedDate !== todaysDate) setSessionIsToday(false);\n  }, []);\n\n  useEffect(() => {\n    if (routineDates.some((date) => date === todaysDate)) {\n      setSessionIsToday(true);\n      setDisplayedDate(routineDates[routineDates.length - 1]);\n    }\n  }, [routineDates.length]);\n\n  return (\n    <section\n      className={props.className}\n      id={props.id}\n      data-routine-name={props.routineName}\n      data-date={displayedDate}\n    >\n      <button\n        className=\"slide-btn slide-left\"\n        style={{\n          visibility: currentSlide === 0 && \"hidden\",\n        }}\n        onClick={(event) => onSlideChange(event, \"prev\")}\n      >\n        <img src={slideChange} alt=\"slide-left arrow\" />\n      </button>\n\n      <button\n        className=\"slide-btn slide-right\"\n        style={{\n          visibility:\n            displayedDate &&\n            currentSlide === props.routine.logbook[displayedDate].length - 1 &&\n            \"hidden\",\n        }}\n        onClick={(event) => onSlideChange(event, \"next\")}\n      >\n        <img src={slideChange} alt=\"slide-right arrow\" />\n      </button>\n\n      <h2>{props.routineName}</h2>\n\n      <select\n        name=\"routine-dates\"\n        value={displayedDate}\n        readOnly={displayedDate}\n        onChange={setCurrentDateHandler}\n      >\n        <option>Select a date</option>\n        {routineDates\n          .map((date, i) => (\n            <option\n              // onChange={() => {\n              //   console.log(date);\n              //   setCurrentDateHandler(date, i);\n              // }}\n              key={date}\n              value={date}\n            >\n              {date}\n            </option>\n          ))\n          .sort((a, b) => a - b)}\n      </select>\n\n      {!todayIsTheNewDate && (\n        <button onClick={addNewDateHandler}>\n          + I'm doing a new session today!\n        </button>\n      )}\n\n      {props.routine.logbook[displayedDate] && (\n        <div\n          data-date={displayedDate}\n          className=\"exercises-container\"\n          style={{\n            transform: `translateX(-${300 * currentSlide}px)`,\n            width: `${props.routine.logbook[displayedDate].length * 300}px`,\n          }}\n        >\n          {props.routine.logbook[displayedDate].map((exercise, i) => {\n            return (\n              <Exercise\n                key={`${exercise.name}-${i + 1}`}\n                routineName={props.routineName}\n                routineIndex={props.routineIndex}\n                routineDate={displayedDate}\n                ex={exercise}\n                onEditExercise={() => {\n                  context.toggleModal(exercise);\n                }}\n                onBlur={(event) => onBlurHandler(event, exercise)}\n                onDeleteExercise={context.deleteExercise}\n              />\n            );\n          })}\n        </div>\n      )}\n\n      {sessionIsToday && (\n        <button\n          className=\"add-ex-btn\"\n          onClick={() => {\n            context.toggleModal({\n              routineName: props.routineName,\n              routineDate: displayedDate,\n              exercises: props.routine.logbook[displayedDate],\n            });\n          }}\n        >\n          + Add Exercise\n        </button>\n      )}\n    </section>\n  );\n}\n","/Users/Zluf/Desktop/Dev Stuffs/front-end-mentor-and-other-apps/precision-gym-app-react/src/components/UI/UserDashboard/Exercise.js",["110","111"],"import React from \"react\";\nimport \"./Exercise.css\";\nimport AppContext from \"../../../context/app-context\";\nimport ExerciseStats from \"./Exercise/ExerciseStats\";\n\nexport default function Exercise(props) {\n  const context = React.useContext(AppContext);\n\n  const keyDownHandler = (event) => {\n    if (event.key === \"Enter\") event.target.blur();\n  };\n  //\n\n  const nameBlurHandler = (event) => {\n    props.ex[\"name\"] = event.target.value;\n    context.updateExerciseList2(props.routineName, props.ex, props.routineDate);\n  };\n\n  return (\n    <div className={`exercise ${props.ex.name}`} data-ex-index={props.exIndex}>\n      <div\n        className=\"delete-exercise\"\n        onClick={() => {\n          context.deleteExercise(\n            props.routineName,\n            props.ex.name,\n            props.routineDate\n          );\n        }}\n      >\n        ❌\n      </div>\n\n      <div className=\"exercise-stat exercise-stats--name\">\n        <label htmlFor=\"name\">Exercise Name: </label>\n        <input\n          name=\"name\"\n          type=\"text\"\n          defaultValue={props.ex.name}\n          onChange={(event) => event.target.value}\n          onKeyDown={keyDownHandler}\n          onBlur={(event) => nameBlurHandler(event)}\n          style={{\n            width: `${props.ex.name.length}ch`,\n          }}\n        ></input>\n      </div>\n\n      {props.ex.sets.map((set, setIndex) => (\n        <ExerciseStats\n          key={setIndex}\n          setIndex={setIndex}\n          ex={props.ex}\n          onKeyDown={keyDownHandler}\n          routineName={props.routineName}\n          routineDate={props.routineDate}\n        />\n      ))}\n    </div>\n  );\n}\n","/Users/Zluf/Desktop/Dev Stuffs/front-end-mentor-and-other-apps/precision-gym-app-react/src/components/UI/UserDashboard/Exercise/RepGauge.js",[],"/Users/Zluf/Desktop/Dev Stuffs/front-end-mentor-and-other-apps/precision-gym-app-react/src/components/UI/UserDashboard/Exercise/ExerciseStats.js",[],{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":3,"column":8,"nodeType":"118","messageId":"119","endLine":3,"endColumn":12},{"ruleId":"116","severity":1,"message":"120","line":5,"column":8,"nodeType":"118","messageId":"119","endLine":5,"endColumn":12},{"ruleId":"116","severity":1,"message":"121","line":6,"column":8,"nodeType":"118","messageId":"119","endLine":6,"endColumn":19},{"ruleId":"116","severity":1,"message":"122","line":7,"column":8,"nodeType":"118","messageId":"119","endLine":7,"endColumn":21},{"ruleId":"116","severity":1,"message":"123","line":8,"column":8,"nodeType":"118","messageId":"119","endLine":8,"endColumn":21},{"ruleId":"116","severity":1,"message":"124","line":11,"column":9,"nodeType":"118","messageId":"119","endLine":11,"endColumn":16},{"ruleId":"112","replacedBy":"125"},{"ruleId":"114","replacedBy":"126"},{"ruleId":"116","severity":1,"message":"127","line":1,"column":17,"nodeType":"118","messageId":"119","endLine":1,"endColumn":25},{"ruleId":"116","severity":1,"message":"128","line":2,"column":39,"nodeType":"118","messageId":"119","endLine":2,"endColumn":52},{"ruleId":"129","severity":1,"message":"130","line":38,"column":6,"nodeType":"131","endLine":38,"endColumn":8,"suggestions":"132"},{"ruleId":"116","severity":1,"message":"133","line":2,"column":17,"nodeType":"118","messageId":"119","endLine":2,"endColumn":23},{"ruleId":"116","severity":1,"message":"127","line":2,"column":25,"nodeType":"118","messageId":"119","endLine":2,"endColumn":33},{"ruleId":"129","severity":1,"message":"134","line":14,"column":6,"nodeType":"131","endLine":14,"endColumn":37,"suggestions":"135"},{"ruleId":"116","severity":1,"message":"128","line":2,"column":38,"nodeType":"118","messageId":"119","endLine":2,"endColumn":51},{"ruleId":"129","severity":1,"message":"130","line":50,"column":6,"nodeType":"131","endLine":50,"endColumn":8,"suggestions":"136"},{"ruleId":"116","severity":1,"message":"137","line":2,"column":10,"nodeType":"118","messageId":"119","endLine":2,"endColumn":27},{"ruleId":"129","severity":1,"message":"138","line":52,"column":6,"nodeType":"131","endLine":52,"endColumn":8,"suggestions":"139"},{"ruleId":"129","severity":1,"message":"140","line":59,"column":6,"nodeType":"131","endLine":59,"endColumn":27,"suggestions":"141"},{"ruleId":"116","severity":1,"message":"142","line":4,"column":8,"nodeType":"118","messageId":"119","endLine":4,"endColumn":16},{"ruleId":"116","severity":1,"message":"143","line":5,"column":8,"nodeType":"118","messageId":"119","endLine":5,"endColumn":13},"no-native-reassign",["144"],"no-negated-in-lhs",["145"],"no-unused-vars","'Logo' is defined but never used.","Identifier","unusedVar","'Auth' is defined but never used.","'AuthDetails' is defined but never used.","'UserDashboard' is defined but never used.","'AddNewRoutine' is defined but never used.","'context' is assigned a value but never used.",["144"],["145"],"'useState' is defined but never used.","'updateProfile' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'context'. Either include it or remove the dependency array.","ArrayExpression",["146"],"'useRef' is defined but never used.","React Hook React.useEffect has a missing dependency: 'context'. Either include it or remove the dependency array.",["147"],["148"],"'signInAnonymously' is defined but never used.","React Hook useEffect has missing dependencies: 'displayedDate' and 'todaysDate'. Either include them or remove the dependency array.",["149"],"React Hook useEffect has missing dependencies: 'routineDates' and 'todaysDate'. Either include them or remove the dependency array.",["150"],"'RepGauge' is defined but never used.","'angle' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"151","fix":"152"},{"desc":"153","fix":"154"},{"desc":"151","fix":"155"},{"desc":"156","fix":"157"},{"desc":"158","fix":"159"},"Update the dependencies array to be: [context]",{"range":"160","text":"161"},"Update the dependencies array to be: [context, context.fetchExerciseDatabase]",{"range":"162","text":"163"},{"range":"164","text":"161"},"Update the dependencies array to be: [displayedDate, todaysDate]",{"range":"165","text":"166"},"Update the dependencies array to be: [routineDates, routineDates.length, todaysDate]",{"range":"167","text":"168"},[1052,1054],"[context]",[550,581],"[context, context.fetchExerciseDatabase]",[1387,1389],[1917,1919],"[displayedDate, todaysDate]",[2108,2129],"[routineDates, routineDates.length, todaysDate]"]